const express = require("express");
const cors = require("cors");
const axios = require("axios");
require("dotenv").config();

const app = express();
const port = 3000;

// –ú–∏–¥–ª–≤–∞—Ä—ã
app.use(cors());
app.use(express.json());

// –ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —Ç–≤–æ–µ–≥–æ –∞–≥–µ–Ω—Ç–∞ Mistral Agent Builder
const AGENT_ID = "ag:fff2a3f7:20251012:untitled-agent:4a81e5a0";

// –û—Å–Ω–æ–≤–Ω–æ–π –º–∞—Ä—à—Ä—É—Ç
app.post("/ask", async (req, res) => {
  try {
    const {
      gender,
      age,
      allergies,
      diagnosis,
      prescriptions,
      other,
      conversation_id,
    } = req.body;

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–ø–æ–ª–Ω–µ–Ω–Ω–æ—Å—Ç—å –ø–æ–ª–µ–π
    if (!gender || !age || !allergies || !diagnosis || !prescriptions) {
      return res
        .status(400)
        .json({ error: "–í—Å–µ –ø–æ–ª—è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è." });
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ API –∫–ª—é—á–∞
    if (!process.env.MISTRAL_API_KEY) {
      return res.status(500).json({
        error: "API –∫–ª—é—á –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω",
        hint: "–î–æ–±–∞–≤—å—Ç–µ MISTRAL_API_KEY=–≤–∞—à_–∫–ª—é—á –≤ .env",
      });
    }

    // –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    const userMessage = `
–ü–∞—Ü–∏–µ–Ω—Ç:
- –ü–æ–ª: ${gender}
- –í–æ–∑—Ä–∞—Å—Ç: ${age}
- –ê–ª–ª–µ—Ä–≥–∏—á–µ—Å–∫–∏–µ —Ä–µ–∞–∫—Ü–∏–∏: ${allergies}
- –î–∏–∞–≥–Ω–æ–∑: ${diagnosis}
- –ù–∞–∑–Ω–∞—á–µ–Ω–∏—è: ${prescriptions}
${other ? `- –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è: ${other}` : ""}
`;

    console.log("üì® –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –∫ Mistral Agents API...");

    // –§–æ—Ä–º–∏—Ä—É–µ–º –∑–∞–ø—Ä–æ—Å –∫ API Mistral Agents
    const response = await axios.post(
      "https://api.mistral.ai/v1/conversations",
      {
        inputs: userMessage,
        agent_id: AGENT_ID,
        stream: false,
        store: true,
        conversation_id: conversation_id || undefined,
      },
      {
        headers: {
          "Content-Type": "application/json",
          Authorization: `Bearer ${process.env.MISTRAL_API_KEY}`,
          Accept: "application/json",
        },
      }
    );

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–≤–µ—Ç–∞
    const data = response.data;
    const outputs = Array.isArray(data.outputs) ? data.outputs : [];
    const aiText = outputs
      .map((o) => {
        if (typeof o.content === "string") return o.content;
        try {
          return JSON.stringify(o.content, null, 2);
        } catch {
          return String(o.content ?? "");
        }
      })
      .join("\n\n");

    console.log("‚úÖ –û—Ç–≤–µ—Ç –ø–æ–ª—É—á–µ–Ω –æ—Ç –∞–≥–µ–Ω—Ç–∞ Mistral");

    res.json({
      success: true,
      response: aiText,
      conversation_id: data.conversation_id ?? null,
    });
  } catch (error) {
    console.error(
      "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞–±–æ—Ç–µ —Å Mistral Agents API:",
      error?.response?.data || error
    );

    let errorMessage = "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–ø—Ä–æ—Å–∞";
    if (error?.response?.status === 401) errorMessage = "–ù–µ–≤–µ—Ä–Ω—ã–π API –∫–ª—é—á";
    else if (error?.response?.status === 429)
      errorMessage = "–ü—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç –∑–∞–ø—Ä–æ—Å–æ–≤";
    else if (error?.code === "ECONNREFUSED")
      errorMessage = "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ API";
    else if (error?.response?.status === 404)
      errorMessage = "API endpoint –Ω–µ –Ω–∞–π–¥–µ–Ω";

    res.status(500).json({
      success: false,
      error: errorMessage,
      details: error?.response?.data || error?.message || String(error),
    });
  }
});

// –°—Ç–∞—Ä—Ç —Å–µ—Ä–≤–µ—Ä–∞
app.listen(port, () => {
  console.log(`üöÄ –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ http://localhost:${port}`);
  console.log(`POST –∑–∞–ø—Ä–æ—Å—ã –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –Ω–∞ http://localhost:${port}/ask`);
});
